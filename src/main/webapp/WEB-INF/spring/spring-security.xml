<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/listUsers**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/listUsers/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login.html" default-target-url="/" authentication-failure-url="/login?error" />	
		<logout logout-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>		
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select name, password, enabled from user where name=?"
				authorities-by-username-query=
					"select user.name, role.name 
						from user
					 join user_role
					 	on user.id = user_role.user_id
					 join role 
					 	on user_role.role_id = role.id
					 where user.name=?" />
					 
			<password-encoder hash="bcrypt" />
			
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>